library(DBI)
library(dplyr)
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "majorplan",
host = "info481-db.ibromley.net",
username = "application",
password = "9QEdAfhOYtksJYfp"
)
dbGetQuery(conn, "SELECT * FROM MAJOR")
dbDisconnect(conn)
runQuery <- function(query) {
# establish database connection
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "majorplan",
host = "info481-db.ibromley.net",
username = "application",
password = "9QEdAfhOYtksJYfp"
)
# defer close database connection
on.exit(dbDisconnect(conn))
# run query and return result
result <- dbGetQuery(conn, query)
return(result)
}
tag.names <- runQuery("SELECT * FROM TAGS")
tag.names <- runQuery("SELECT * FROM TAG")
tag.names
tag.names$TagName
tags <- runQuery("SELECT * FROM TAG")
tags
tags$TagName
shiny::runApp()
input$search
runApp()
runApp()
runApp()
selected.tag <- 'science'
runApp()
runApp()
runApp()
paste0("SELECT MajorName, TagName
FROM MAJOR M
JOIN MAJOR_TAG MT ON MT.MajorID = M.MajorID
JOIN TAG T ON T.TagID = MT.TagID
WHERE T.TagName = ", selected.tag)
runApp()
runApp()
runApp()
majors <- runQuery("SELECT MajorName, TagName
FROM MAJOR M
JOIN MAJOR_TAG MT ON MT.MajorID = M.MajorID
JOIN TAG T ON T.TagID = MT.TagID")
majors
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
getwd()
library(DBI)
library(dplyr)
setwd("C:/Users/Emily Zhai/Documents/University of Washington/Senior/Fall/Info 481/Final Project/info481-majorplan")
data <- read.csv("../MajorRequirements.csv")
setwd("C:/Users/Emily Zhai/Documents/University of Washington/Senior/Fall/Info 481/Final Project/info481-majorplan/SQL")
data <- read.csv("../MajorRequirements.csv")
setwd("C:/Users/Emily Zhai/Documents/University of Washington/Senior/Fall/Info 481/Final Project/info481-majorplan/SQL")
data <- read.csv("../MajorRequirements.csv")
getwd()
setwd("C:/Users/Emily Zhai/Documents/University of Washington/Senior/Fall/Info 481/Final Project/info481-majorplan/SQL")
majorreqs <- read.csv("../data/MajorRequirements.csv")
View(majorreqs)
setwd("~/Documents/University of Washington/Senior/Fall/Info 481/Final Project/info481-majorplan/SQL")
setwd("~")
gewd()
getwd()
setwd("~/University of Washington/Senior/Fall/Info 481/Final Project/info481-majorplan/SQL")
majorreqs <- read.csv("../data/MajorRequirements.csv")
# import libraries
library(DBI)
library(dplyr)
# read data files
setwd("~/University of Washington/Senior/Fall/Info 481/Final Project/info481-majorplan/SQL")
majorcourses <- read.csv("../data/major_courses.csv")
# runs a query against the database
runQuery <- function(query) {
# establish database connection
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "majorplan",
host = "info481-db.ibromley.net",
username = "application",
password = "9QEdAfhOYtksJYfp"
)
# defer close database connection
on.exit(dbDisconnect(conn))
# run query and return result
result <- dbGetQuery(conn, query)
return(result)
}
# SPROC: add majors and course prereqs
View(majorcourses)
setwd("~/University of Washington/Senior/Fall/Info 481/Final Project/info481-majorplan/SQL")
majorcourses <- read.csv("../data/major_courses.csv")
runQuery <- function(query) {
# establish database connection
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "majorplan",
host = "info481-db.ibromley.net",
username = "application",
password = "9QEdAfhOYtksJYfp"
)
# defer close database connection
on.exit(dbDisconnect(conn))
# run query and return result
result <- dbGetQuery(conn, query)
return(result)
}
# import libraries
library(DBI)
library(dplyr)
# read data files
setwd("~/University of Washington/Senior/Fall/Info 481/Final Project/info481-majorplan/SQL")
courses <- read.csv("../data/major_courses.csv")
reqs <- read.csv("../data/major_reqs.csv")
tags <- read.csv("../data/major_tags.csv")
# runs a query against the database
runQuery <- function(query) {
# establish database connection
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "majorplan",
host = "info481-db.ibromley.net",
username = "application",
password = "9QEdAfhOYtksJYfp"
)
# defer close database connection
on.exit(dbDisconnect(conn))
# run query and return result
result <- dbGetQuery(conn, query)
return(result)
}
# SPROC: add major course dependencies
# SPROC: add major requirements
# SPROC: add major tags
View(res)
View(reqs)
View(courses)
View(tags)
courses <- read.csv("../data/major_courses.csv")
View(courses)
for(i in names(reqs)) {
print(i)
}
colnames(courses)[1] <- "ACMS"
colnames(reqs)[1] <- "ACMS"
colnames(tags)[1] <- "ACMS"
for(i in names(reqs)) {
print(i)
}
for(i in names(reqs)) {
print(i)
print(reqs[[i]])
}
for(i in names(reqs)) {
print(i)
if(!is.na(reqs[[i]])){
print(reqs[[i]])
}
}
for(i in names(tags)) {
print(i)
if(!is.na(tags[[i]])){
print(tags[[i]])
}
}
for(i in names(tags)) {
print(tags$i)
}
tags
tags$ACMS
for(major in names(tags)) {
print(i)
}
View(tags)
for(major in names(tags)) {
print(major)
}
# import libraries
library(DBI)
library(dplyr)
# read data files
setwd("~/University of Washington/Senior/Fall/Info 481/Final Project/info481-majorplan/SQL")
courses <- read.csv("../data/major_courses.csv")
reqs <- read.csv("../data/major_reqs.csv")
tags <- read.csv("../data/major_tags.csv")
# reformat first column name
colnames(courses)[1] <- "ACMS"
colnames(reqs)[1] <- "ACMS"
colnames(tags)[1] <- "ACMS"
runQuery <- function(query) {
# establish database connection
conn <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "majorplan",
host = "info481-db.ibromley.net",
username = "application",
password = "9QEdAfhOYtksJYfp"
)
# defer close database connection
on.exit(dbDisconnect(conn))
# run query and return result
result <- dbGetQuery(conn, query)
return(result)
}
for(major in names(tags)) {
print(major)
}
for(major in names(tags)) {
print(tags[major])
}
tags$ACMS
tags$ACMS
for(major in names(tags)) {
print(tags$major)
}
tags %>% select(major)
tags %>% select(major) %>% na.omit()
courses <- read.csv("../data/major_courses.csv", stringsAsFactors = FALSE)
reqs <- read.csv("../data/major_reqs.csv", stringsAsFactors = FALSE)
tags <- read.csv("../data/major_tags.csv", stringsAsFactors = FALSE)
colnames(courses)[1] <- "ACMS"
colnames(reqs)[1] <- "ACMS"
colnames(tags)[1] <- "ACMS"
View(tags)
courses <- read.csv("../data/major_courses.csv", na.strings=c("","NA"))
reqs <- read.csv("../data/major_reqs.csv", na.strings=c("","NA"))
tags <- read.csv("../data/major_tags.csv", na.strings=c("","NA"))
colnames(courses)[1] <- "ACMS"
colnames(reqs)[1] <- "ACMS"
colnames(tags)[1] <- "ACMS"
View(tas)
View(tags)
tags %>% select(major) %>% na.omit()
tas.of.major <- tags %>% select(major) %>% na.omit()
tags.of.major <- tags %>% select(major) %>% na.omit()
# SPROC: add major tags
for(major in names(tags)) {
tags.of.major <- tags %>%
select(major) %>%
na.omit() %>%
as.list()
}
tags.of.major
for(major in names(tags)) {
tags.of.major <- tags %>%
select(major) %>%
na.omit() %>%
as.vector()
}
tags.of.major
# SPROC: add major tags
for(major in names(tags)) {
tags.of.major <- tags %>%
select(major) %>%
na.omit()
for(i in 1:length(tags.of.major)) {
print(tags.of.major[i])
}
}
for(i in 1:length(tags.of.major)) {
print(tags.of.major[i])
}
or(i in 1:length(tags.of.major)) {
print("break")
print(tags.of.major[i])
}
for(i in 1:length(tags.of.major)) {
print("break")
print(tags.of.major[i])
}
for(i in 1:length(tags.of.major)) {
print(tags.of.major[i,])
}
for(i in 1:length(tags.of.major) + 1) {
print(tags.of.major[i,])
}
tags.of.major[1,]
tags.of.major[2,]
length(tags.of.major)
for(i in 1:2) {
print(tags.of.major[i,])
}
numTags <- length(tags.of.major) + 1
for(i in 1:numTags) {
print(tags.of.major[i,])
}
for(major in names(tags)) {
tags.of.major <- tags %>%
select(major) %>%
na.omit()
numTags <- length(tags.of.major) + 1
for(i in 1:numTags) {
print(tags.of.major[i,])
print(sprintf("
BEGIN TRAN
INSERT INTO TAG(TagName)
VALUES()
IF @@ERROR <> 0
ROLLBACK TRAN
ELSE
COMMIT TRAN
"))
}
}
for(major in names(tags)) {
tags.of.major <- tags %>%
select(major) %>%
na.omit()
numTags <- length(tags.of.major) + 1
for(i in 1:numTags) {
print(tags.of.major[i,])
print("
BEGIN TRAN
INSERT INTO TAG(TagName)
VALUES()
IF @@ERROR <> 0
ROLLBACK TRAN
ELSE
COMMIT TRAN"
)
}
}
print("
BEGIN TRAN
INSERT INTO TAG(TagName)
VALUES(" + tags.of.major[i,] + ")
IF @@ERROR <> 0
ROLLBACK TRAN
ELSE
COMMIT TRAN"
)
paste0("
BEGIN TRAN
INSERT INTO TAG(TagName)
VALUES(", tags.of.major[i,], ")
IF @@ERROR <> 0
ROLLBACK TRAN
ELSE
COMMIT TRAN"
)
for(i in 1:numTags) {
#print(tags.of.major[i,])
paste0("CALL(", tags.of.major[i,], ",", major, ")")
}
for(i in 1:numTags) {
#print(tags.of.major[i,])
print(paste0("CALL(", tags.of.major[i,], ",", major, ")"))
}
for(major in names(tags)) {
tags.of.major <- tags %>%
select(major) %>%
na.omit()
numTags <- length(tags.of.major) + 1
for(i in 1:numTags) {
#print(tags.of.major[i,])
print(paste0("CALL(\"", tags.of.major[i,], ", ", major, ")"))
}
}
for(major in names(tags)) {
tags.of.major <- tags %>%
select(major) %>%
na.omit()
numTags <- length(tags.of.major) + 1
for(i in 1:numTags) {
#print(tags.of.major[i,])
print(paste0("CALL('", tags.of.major[i,], "', '", major, "')"))
}
}
tags.of.major <- tags %>%
select(major) %>%
na.omit()
tags.of.major
major <- 'Chemistry'
tags.of.major
tags.of.major <- tags %>%
select(major) %>%
na.omit()
tags.of.major
for(major in names(tags)) {
tags.of.major <- tags %>%
select(major) %>%
na.omit()
print(tags.of.major)
}
tags.of.major <- tags %>%
select(major) %>%
na.omit()
print(length(tags.of.major))
print(tags.of.major)
for(major in names(tags)) {
tags.of.major <- tags %>%
select(major) %>%
na.omit()
print(length(tags.of.major))
print(tags.of.major)
numTags <- length(tags.of.major) + 1
for(i in 1:numTags) {
#print(tags.of.major[i,])
print(paste0("CALL('", tags.of.major[i,], "', '", major, "')"))
}
}
for(major in names(tags)) {
tags.of.major <- tags %>%
select(major) %>%
na.omit()
print(nrows(tags.of.major))
print(tags.of.major)
numTags <- length(tags.of.major) + 1
for(i in 1:numTags) {
#print(tags.of.major[i,])
print(paste0("CALL('", tags.of.major[i,], "', '", major, "')"))
}
}
for(major in names(tags)) {
tags.of.major <- tags %>%
select(major) %>%
na.omit()
print(nrow(tags.of.major))
print(tags.of.major)
numTags <- length(tags.of.major) + 1
for(i in 1:numTags) {
#print(tags.of.major[i,])
print(paste0("CALL('", tags.of.major[i,], "', '", major, "')"))
}
}
for(major in names(tags)) {
tags.of.major <- tags %>%
select(major) %>%
na.omit()
for(i in 1:nrow(tags.of.major)) {
#print(tags.of.major[i,])
print(paste0("CALL('", tags.of.major[i,], "', '", major, "')"))
}
}
for(major in names(tags)) {
tags.of.major <- tags %>%
select(major) %>%
na.omit()
for(i in 1:nrow(tags.of.major)) {
runQuery(paste0("CALL('", tags.of.major[i,], "', '", major, "')"))
}
}
for(major in names(tags)) {
tags.of.major <- tags %>%
select(major) %>%
na.omit()
for(i in 1:nrow(tags.of.major)) {
runQuery(paste0("CALL uspAddTags('", tags.of.major[i,], "', '", major, "')"))
}
}
